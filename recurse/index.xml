<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Recurses on The Leo Zone</title><link>https://theleo.zone/recurse/</link><description>Recent content in Recurses on The Leo Zone</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Mon, 16 Dec 2019 00:00:00 +0000</lastBuildDate><atom:link href="https://theleo.zone/recurse/index.xml" rel="self" type="application/rss+xml"/><item><title>RC 11 (fin)</title><link>https://theleo.zone/recurse/rc-11-fin/</link><pubDate>Mon, 16 Dec 2019 00:00:00 +0000</pubDate><guid>https://theleo.zone/recurse/rc-11-fin/</guid><description>In the last few days, I&amp;rsquo;ve gone from RC in Brooklyn to moving back to San Francisco to currently sitting on a plane to the Dominican Republic.
Recurse is over! It happened! What an excellent time.
I got a lot out of projects, reading, meet ups, interviewing and online courses. The study and research was varied and rewarding.
In the end, though, I got as much or more from being around the people at RC as the individual study.</description></item><item><title>RC 10 (work)</title><link>https://theleo.zone/recurse/rc-10-work/</link><pubDate>Mon, 09 Dec 2019 00:00:00 +0000</pubDate><guid>https://theleo.zone/recurse/rc-10-work/</guid><description>&amp;#39;Chad, destroyer of worlds&amp;#39; - circa 2015 My second to last week at RC was first spent in San Francisco at onsite interviews for positions in the city. Interviews went well and I had a nice time seeing some friends while there.
Unfortunately, there wasn&amp;rsquo;t enough time to finish the compiler of nand2tetris! The first week where I haven&amp;rsquo;t finished my nand2tetris project :&amp;rsquo;(. I&amp;rsquo;m going to try my best to finish up both the compiler and OS this final week, though!</description></item><item><title>RC 09 (λεξικόν)</title><link>https://theleo.zone/recurse/rc-09-%CE%BB%CE%B5%CE%BE%CE%B9%CE%BA%CF%8C%CE%BD/</link><pubDate>Sat, 30 Nov 2019 00:00:00 +0000</pubDate><guid>https://theleo.zone/recurse/rc-09-%CE%BB%CE%B5%CE%BE%CE%B9%CE%BA%CF%8C%CE%BD/</guid><description>In my third to last week of RC (!!!), I learned about Nix, Jest for Test Driven Development in Javascript, completed project 10 of nand2tetris, and continued interview prep.
Project 10 consists of the first half of the Jack compiler. The overall compiler is split in to tokenization + lexical analysis (project 10) and VM code generation (project 11).
The first half of the compiler was the most time consuming project of the course so far.</description></item><item><title>RC 08 (mooninites)</title><link>https://theleo.zone/recurse/rc-08-mooninites/</link><pubDate>Mon, 25 Nov 2019 00:00:00 +0000</pubDate><guid>https://theleo.zone/recurse/rc-08-mooninites/</guid><description>Aqua Teen Hunger Force&amp;#39;s Mooninites This week, I completed Nand2Tetris project 9, wrote about Givewell, and continued interview prep.
Nand2Tetris&amp;rsquo; gets you used to programming in the high-level &amp;ldquo;Jack&amp;rdquo; programming language. It would be difficult (or at least, less meaningful) to write a compiler for a high level language that you don&amp;rsquo;t really understand.
I found it useful in that it solidified the rules of Jack and allowed me to project my thoughts of what the compiler would be doing to translate Jack code to VM Code.</description></item><item><title>RC 07 (fib 5 ways)</title><link>https://theleo.zone/recurse/rc-07-fib-5-ways/</link><pubDate>Tue, 19 Nov 2019 00:00:00 +0000</pubDate><guid>https://theleo.zone/recurse/rc-07-fib-5-ways/</guid><description>Recurse continues!
Each successive number in the Fibonacci Sequence is the sum of the two prior numbers:
0, 1, 1, 2, 3, 5, 8, 13...
While learning about algorithms and doing nand2tetris, I&amp;rsquo;ve come across the Fibonacci Sequence a number of times. Here are a 5 ways to calculate the Nth element of the sequence:
Method 1: Recursion Recursion is when a function calls itself. Intuitively, it&amp;rsquo;s a top down approach to problem solving.</description></item><item><title>RC 06 (intermediate representations)</title><link>https://theleo.zone/recurse/rc-06-intermediate-representations/</link><pubDate>Sat, 09 Nov 2019 00:00:00 +0000</pubDate><guid>https://theleo.zone/recurse/rc-06-intermediate-representations/</guid><description>I wrapped up Nand2Tetris project 6 and completed project 7 this week. One satisfying thing about this course has been consistently connecting the &amp;ldquo;simple&amp;rdquo; implementations that the course outlines to the hyper complex implementations in the real world.
Project 7 outlined the idea of multi-stage compilation. Take a high level language and compile it to a &amp;ldquo;Virtual Machine Code&amp;rdquo;, with readable but lower level syntax. This &amp;ldquo;intermediate representation&amp;rdquo; can then be compiled further through assembly to machine code (the 1s and 0s) for a specific hardware platform (e.</description></item><item><title>RC 05 (your biggest weakness)</title><link>https://theleo.zone/recurse/rc-05-your-biggest-weakness/</link><pubDate>Mon, 04 Nov 2019 00:00:00 +0000</pubDate><guid>https://theleo.zone/recurse/rc-05-your-biggest-weakness/</guid><description>80,000 Hours is a non-profit that researches the world&amp;rsquo;s most pressing problems and provides guidance on how to make an impact on them with your career. Apart from the whole &amp;ldquo;saving the world&amp;rdquo; focus, what I love about their basic premise is that your career matters.
Not only does it matter to you, who will be the one living it out every day and week and month for approximately 80,000 hours, but it matters to the world what you do.</description></item><item><title>RC 04 (all the wrong type)</title><link>https://theleo.zone/recurse/rc-04-all-the-wrong-type/</link><pubDate>Sat, 26 Oct 2019 00:00:00 +0000</pubDate><guid>https://theleo.zone/recurse/rc-04-all-the-wrong-type/</guid><description>This week, the hack computer&amp;rsquo;s hardware was completed with project 5 of Nand2Tetris! I decided to write the remaining software portion of the course (projects 6-12) in Rust, feeding two birds with one scone.
The Mandelbrot set with Rust Source: http://downloads.codecoding.com/rust/Programming%20Rust.pdf While I started learning Rust with the the O&amp;rsquo;Reilly Book, I&amp;rsquo;ve found The Rust Programming Language and Rustlings to be great resources as well. It was also incredibly helpful when Evan installed Rust Language Server (RLS) in my VSCode environment, making it easy to view source code and highlighting errors before compile time.</description></item><item><title>RC 03 (regressing linearly)</title><link>https://theleo.zone/recurse/rc-03-regressing-linearly/</link><pubDate>Fri, 18 Oct 2019 00:00:00 +0000</pubDate><guid>https://theleo.zone/recurse/rc-03-regressing-linearly/</guid><description>This week, I completed project 4 of Nand2Tetris, updated my resume and converted it to a responsive web page, and learned a whole lot about linear regression.
Nand2Tetris project 4 breaks away from the Hardware Description Language of the first three projects and moves in to a pseudo assembly code. This assembly language is specifically written for the &amp;ldquo;Hack&amp;rdquo; computer that the class builds up through the first six projects. Writing in &amp;ldquo;assembly&amp;rdquo; is one step down from writing in something like C - there is no automatic memory management, only a couple registers to play with, lots of referencing addresses with pointers and semi-roundabout ways of doing things.</description></item><item><title>RC 02 (R, wavey!)</title><link>https://theleo.zone/recurse/rc-02-r-wavey/</link><pubDate>Fri, 11 Oct 2019 00:00:00 +0000</pubDate><guid>https://theleo.zone/recurse/rc-02-r-wavey/</guid><description>This week, I completed project 3 of Nand2Tetris, learned some deeper fundamentals of statistical learning in R, and wrote my first interactive thing in D3.
D3.js is a widely used javascript library for creating beautiful, interactive visualizations on the web. I made quite a simple interactive sine wave plotter, but the exercise took hours and really helped me gain insight in to D3&amp;rsquo;s declarative approach to data-centric object manipulation. Code for the thing here.</description></item><item><title>RC 01 (logic immunity)</title><link>https://theleo.zone/recurse/rc-01-logic-immunity/</link><pubDate>Fri, 04 Oct 2019 00:00:00 +0000</pubDate><guid>https://theleo.zone/recurse/rc-01-logic-immunity/</guid><description>I have been learning about basic computer architecture (logic gates) and working on a herd immunity simulation.
Computer architecture work has come from the awesome Nand2Tetris course by Shimon Schocken and Noam Nisan. Shimon has a fantastic Ted Talk about the course and many Recursers have done it in the past. I&amp;rsquo;m 2 projects in to the first half of the course (Coursera link)
The premise is that you start with a Nand (&amp;ldquo;Not And&amp;rdquo;) logic gate.</description></item><item><title>RC 00 (it begins)</title><link>https://theleo.zone/recurse/rc-00-it-begins/</link><pubDate>Wed, 25 Sep 2019 00:00:00 +0000</pubDate><guid>https://theleo.zone/recurse/rc-00-it-begins/</guid><description>It is day 3 at the Recurse Center (RC)!
Me experimenting with Haskell and Rust It has been a whirlwind of orientation, meeting awesome people, learning about (and about the existence of) new cool things, setting up and settling in.
This was my second day here:
8-9am: Research blogging tools to create this very website. Decide on Jekyll + github pages + namecheap domain as a good solution 9-10am: Update MacOS to Mojave after experiencing ruby-related jekyll issues 10-11am: Using this great tutorial, get jekyll and bundler installed.</description></item></channel></rss>